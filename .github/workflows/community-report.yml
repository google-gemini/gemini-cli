name: Generate Weekly Community Report üìä

on:
  schedule:
    - cron: '0 12 * * 1' # Run at 12:00 UTC on Monday
  workflow_dispatch:
    inputs:
      days:
        description: 'Number of days to look back for the report'
        required: true
        default: '7'

jobs:
  generate-report:
    name: Generate Report üìù
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: read
      discussions: read
      contents: read
      id-token: write

    steps:
      - name: Generate GitHub App Token üîë
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - name: Generate Report üìú
        id: report
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
          REPO: ${{ github.repository }}
          DAYS: ${{ github.event.inputs.days || '7' }}
        run: |
          set -e

          START_DATE=$(date -u -d "$DAYS days ago" +'%Y-%m-%d')
          END_DATE=$(date -u +'%Y-%m-%d')
          echo "‚è≥ Generating report for contributions from $START_DATE to $END_DATE..."

          

          total_issues=0
          total_prs=0

          echo "üîé Fetching issues and pull requests..."
          ITEMS_JSON=$(gh search issues --repo "$REPO" "created:>$START_DATE" --json isPullRequest --limit 1000)

          for row in $(echo "${ITEMS_JSON}" | jq -r '.[] | @base64'); do
              _jq() {
                  echo ${row} | base64 --decode | jq -r ${1}
              }
              is_pr=$(_jq '.isPullRequest')

              if [[ "$is_pr" == "true" ]]; then
                  ((total_prs++))
              else
                  ((total_issues++))
              fi
          done

          total_discussions=0

          echo "üó£Ô∏è Fetching discussions..."
          DISCUSSION_QUERY='''
          query($q: String!) {
            search(query: $q, type: DISCUSSION, first: 100) {
              nodes {
                ... on Discussion {
                  author {
                    login
                  }
                }
              }
            }
          }'''
          DISCUSSIONS_JSON=$(gh api graphql -f q="repo:$REPO created:>$START_DATE" -f query="$DISCUSSION_QUERY")

          # Count discussions directly from the JSON output
          total_discussions=$(echo "${DISCUSSIONS_JSON}" | jq '.data.search.nodes | length')

          echo "‚úçÔ∏è Generating report content..."
          REPORT_TITLE="Community Contribution Report: $START_DATE to $END_DATE"

          REPORT_BODY=$(cat <<EOF
          ### üíñ Community Contribution Report

          **Period:** $START_DATE to $END_DATE

          | Category | Total |
          |---|---:|
          | **Issues** | $total_issues |
          | **Pull Requests** | $total_prs |
          | **Discussions** | $total_discussions |

          _This report was generated automatically by a GitHub Action._
          EOF
          )

          echo "report_body<<EOF" >> $GITHUB_OUTPUT
          echo "$REPORT_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          echo "üìä Community Contribution Report:"
          echo "$REPORT_BODY"

      - name: ü§ñ Get Insights from Report
        if: steps.report.outputs.report_body != ''
        uses: google-gemini/gemini-cli-action@41c0f1b3cbd1a0b284251bd1aac034edd07a3a2f
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        with:
          version: 0.1.8-rc.0
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          OTLP_GCP_WIF_PROVIDER: ${{ secrets.OTLP_GCP_WIF_PROVIDER }}
          OTLP_GCP_SERVICE_ACCOUNT: ${{ secrets.OTLP_GCP_SERVICE_ACCOUNT }}
          OTLP_GOOGLE_CLOUD_PROJECT: ${{ secrets.OTLP_GOOGLE_CLOUD_PROJECT }}
          settings_json: |
            {
              "coreTools": [
                "run_shell_command(gh issue list)",
                "run_shell_command(gh pr list)",
                "run_shell_command(gh search issues)",
                "run_shell_command(gh search prs)"
              ]
            }
          prompt: |
            You are a helpful assistant that analyzes community contribution reports.
            Based on the following report, please provide a brief summary and highlight any interesting trends or potential areas for improvement.

            Report:
            ${{ steps.report.outputs.report_body }}
