name: 'Nightly Release'

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Run a dry-run of the release process; no branches, npm packages or GitHub releases will be created.'
        required: true
        type: 'boolean'
        default: true

jobs:
  release:
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8' # ratchet:actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 'Setup Node.js'
        uses: 'actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020' # ratchet:actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: 'Install Dependencies'
        run: npm ci

      - name: 'Build get-release-version script'
        run: npm run build:get-release-version

      - name: 'Set dry_run flag'
        id: 'vars'
        run: |
          is_dry_run="false"
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.dry_run }}" == "true" ]]; then
            is_dry_run="true"
          fi
          echo "is_dry_run=${is_dry_run}" >> "${GITHUB_OUTPUT}"

      - name: 'Get Nightly Version'
        id: 'nightly_version'
        run: |
          VERSION_JSON=$(node dist/get-release-version.js --type nightly)
          echo "RELEASE_TAG=$(echo "${VERSION_JSON}" | jq -r .releaseTag)" >> "${GITHUB_OUTPUT}"
          echo "RELEASE_VERSION=$(echo "${VERSION_JSON}" | jq -r .releaseVersion)" >> "${GITHUB_OUTPUT}"
          echo "NPM_TAG=$(echo "${VERSION_JSON}" | jq -r .npmTag)" >> "${GITHUB_OUTPUT}"
          echo "PREVIOUS_TAG=$(echo "${VERSION_JSON}" | jq -r .previousReleaseTag)" >> "${GITHUB_OUTPUT}"

      - name: 'Build and Publish Nightly'
        uses: ./.github/workflows/build-and-publish.yml
        with:
          ref: 'main'
          release_version: ${{ steps.nightly_version.outputs.RELEASE_VERSION }}
          npm_tag: ${{ steps.nightly_version.outputs.NPM_TAG }}
          dry_run: ${{ steps.vars.outputs.is_dry_run }}
        secrets:
          WOMBAT_TOKEN_CORE: ${{ secrets.WOMBAT_TOKEN_CORE }}
          WOMBAT_TOKEN_CLI: ${{ secrets.WOMBAT_TOKEN_CLI }}

      - name: 'Create Nightly GitHub Release'
        uses: ./.github/workflows/create-github-release.yml
        with:
          release_tag: ${{ steps.nightly_version.outputs.RELEASE_TAG }}
          release_branch: 'main'
          previous_tag: ${{ steps.nightly_version.outputs.PREVIOUS_TAG }}
          dry_run: ${{ steps.vars.outputs.is_dry_run }}
