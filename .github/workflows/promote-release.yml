name: Promote Release

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'The branch, tag, or SHA to checkout. Defaults to main.'
        required: true
        default: 'main'
      dry_run:
        description: 'Run a dry-run of the release process; no branches, npm packages or GitHub releases will be created.'
        required: true
        type: 'boolean'
        default: true

jobs:
  promote:
    name: Promote Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Get latest preview tag
        id: preview_tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=$(gh release list --limit 100 --json tagName | jq -r '[.[] | select(.tagName | contains("preview"))] | .[0].tagName')
          echo "LATEST_PREVIEW_TAG=$TAG" >> $GITHUB_OUTPUT

      - name: Get latest stable tag
        id: stable_tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=$(gh release list --limit 100 --json tagName | jq -r '[.[] | select(.tagName | (contains("nightly") or contains("preview")) | not)] | .[0].tagName')
          echo "LATEST_STABLE_TAG=$TAG" >> $GITHUB_OUTPUT

      - name: Print Tags
        run: |
          echo "Latest Preview Tag: ${{ steps.preview_tag.outputs.LATEST_PREVIEW_TAG }}"
          echo "Latest Stable Tag: ${{ steps.stable_tag.outputs.LATEST_STABLE_TAG }}"