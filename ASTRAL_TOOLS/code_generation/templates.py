"""
Template loading logic for the Code Generation Tool.
"""

import logging
from pathlib import Path
from typing import Any

logger = logging.getLogger(__name__)


def load_code_templates() -> dict[str, dict[str, str]]:
    """Load proven code templates for supported languages."""
    templates: dict[str, dict[str, str]] = {}
    templates_dir = Path(__file__).parent / "templates"
    for language_dir in templates_dir.iterdir():
        if language_dir.is_dir():
            language = language_dir.name
            templates[language] = {}
            for template_file in language_dir.iterdir():
                if template_file.is_file() and template_file.name.endswith(".template"):
                    template_name = template_file.name.replace(".template", "").split(
                        "."
                    )[0]
                    with open(template_file, encoding="utf-8") as f:
                        templates[language][template_name] = f.read()
    return templates


def load_project_templates() -> dict[str, dict[str, Any]]:
    """Load project structure templates with best practices."""
    return {
        "python_api": {
            "description": "Python API project with FastAPI and best practices",
            "structure": {
                "app/": {
                    "__init__.py": "",
                    "main.py": "# FastAPI application entry point",
                    "api/": {
                        "__init__.py": "",
                        "routes/": {
                            "__init__.py": "",
                            "health.py": "# Health check routes",
                        },
                        "models/": {
                            "__init__.py": "",
                            "base.py": "# Base models",
                        },
                        "services/": {
                            "__init__.py": "",
                            "auth.py": "# Authentication service",
                        },
                    },
                    "core/": {
                        "__init__.py": "",
                        "config.py": "# Configuration management",
                        "database.py": "# Database connection",
                    },
                },
                "tests/": {
                    "__init__.py": "",
                    "test_api.py": "# API tests",
                    "conftest.py": "# Test configuration",
                },
                "requirements.txt": "fastapi\nuvicorn\npydantic\n",
                "README.md": "# {project_name}\n\nAPI project generated by Crisalida",
                ".gitignore": "__pycache__/\n*.pyc\n.env\n",
                "Dockerfile": "FROM python:3.9\n# Docker configuration",
            },
        },
        "python_cli": {
            "description": "Python CLI application with Click",
            "structure": {
                "src/": {
                    "__init__.py": "",
                    "cli.py": "# CLI interface",
                    "commands/": {
                        "__init__.py": "",
                        "base.py": "# Base command class",
                    },
                    "utils/": {
                        "__init__.py": "",
                        "helpers.py": "# Utility functions",
                    },
                },
                "tests/": {
                    "__init__.py": "",
                    "test_cli.py": "# CLI tests",
                },
                "setup.py": "# Package setup",
                "requirements.txt": "click\n",
                "README.md": "# {project_name}\n\nCLI application generated by Crisalida",
            },
        },
        "react_app": {
            "description": "React web application with modern structure",
            "structure": {
                "src/": {
                    "index.js": "// Application entry point",
                    "App.js": "// Main App component",
                    "components/": {
                        "Header.js": "// Header component",
                        "Footer.js": "// Footer component",
                    },
                    "pages/": {
                        "Home.js": "// Home page",
                    },
                    "utils/": {
                        "api.js": "// API utilities",
                    },
                    "styles/": {
                        "App.css": "/* Main styles */",
                    },
                },
                "public/": {
                    "index.html": "<!-- Main HTML template -->",
                },
                "package.json": """{
  "name": "{project_name}",
  "dependencies": {
    "react": "^18.0.0"
  }
}""",
                "README.md": "# {project_name}\n\nReact application generated by Crisalida",
            },
        },
    }
