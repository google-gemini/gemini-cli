{
  "footer": {
    "noSandbox": "no sandbox",
    "seeDocsHint": "(see /docs)",
    "untrusted": "untrusted"
  },
  "input": {
    "defaultPlaceholder": "  Type your message or @path/to/file",
    "vimPlaceholder": "  Press 'i' for INSERT mode and 'Esc' for NORMAL mode."
  },
  "about": {
    "title": "About Gemini CLI",
    "cliVersion": "CLI Version",
    "gitCommit": "Git Commit",
    "model": "Model",
    "sandbox": "Sandbox",
    "os": "OS",
    "authMethod": "Auth Method",
    "gcpProject": "GCP Project",
    "ideClient": "IDE Client"
  },
  "sessionSummary": {
    "title": "Agent powering down. Goodbye!",
    "interactionSummary": "Interaction Summary",
    "performance": "Performance",
    "sessionId": "Session ID:",
    "toolCalls": "Tool Calls:",
    "successRate": "Success Rate:",
    "wallTime": "Wall Time:",
    "agentActive": "Agent Active:",
    "apiTime": "API Time:",
    "toolTime": "Tool Time:",
    "modelUsage": "Model Usage",
    "reqs": "Reqs",
    "inputTokens": "Input Tokens",
    "outputTokens": "Output Tokens"
  },
  "errors": {
    "unknownCommand": "Unknown command: {{command}}"
  },
  "loading": {
    "waitingForConfirmation": "Waiting for user confirmation...",
    "phrases": [
      "I'm Feeling Lucky",
      "Shipping awesomeness... ",
      "Painting the serifs back on...",
      "Navigating the slime mold...",
      "Consulting the digital spirits...",
      "Reticulating splines...",
      "Warming up the AI hamsters...",
      "Asking the magic conch shell...",
      "Generating witty retort...",
      "Polishing the algorithms...",
      "Don't rush perfection (or my code)...",
      "Brewing fresh bytes...",
      "Counting electrons...",
      "Engaging cognitive processors...",
      "Checking for syntax errors in the universe...",
      "One moment, optimizing humor...",
      "Shuffling punchlines...",
      "Untangling neural nets...",
      "Compiling brilliance...",
      "Loading wit.exe...",
      "Summoning the cloud of wisdom...",
      "Preparing a witty response...",
      "Just a sec, I'm debugging reality...",
      "Confuzzling the options...",
      "Tuning the cosmic frequencies...",
      "Crafting a response worthy of your patience...",
      "Compiling the 1s and 0s...",
      "Resolving dependencies... and existential crises...",
      "Defragmenting memories... both RAM and personal...",
      "Rebooting the humor module...",
      "Caching the essentials (mostly cat memes)...",
      "Optimizing for ludicrous speed",
      "Swapping bits... don't tell the bytes...",
      "Garbage collecting... be right back...",
      "Assembling the interwebs...",
      "Converting coffee into code...",
      "Updating the syntax for reality...",
      "Rewiring the synapses...",
      "Looking for a misplaced semicolon...",
      "Greasin' the cogs of the machine...",
      "Pre-heating the servers...",
      "Calibrating the flux capacitor...",
      "Engaging the improbability drive...",
      "Channeling the Force...",
      "Aligning the stars for optimal response...",
      "So say we all...",
      "Loading the next great idea...",
      "Just a moment, I'm in the zone...",
      "Preparing to dazzle you with brilliance...",
      "Just a tick, I'm polishing my wit...",
      "Hold tight, I'm crafting a masterpiece...",
      "Just a jiffy, I'm debugging the universe...",
      "Just a moment, I'm aligning the pixels...",
      "Just a sec, I'm optimizing the humor...",
      "Just a moment, I'm tuning the algorithms...",
      "Warp speed engaged...",
      "Mining for more Dilithium crystals...",
      "Don't panic...",
      "Following the white rabbit...",
      "The truth is in here... somewhere...",
      "Blowing on the cartridge...",
      "Loading... Do a barrel roll!",
      "Waiting for the respawn...",
      "Finishing the Kessel Run in less than 12 parsecs...",
      "The cake is not a lie, it's just still loading...",
      "Fiddling with the character creation screen...",
      "Just a moment, I'm finding the right meme...",
      "Pressing 'A' to continue...",
      "Herding digital cats...",
      "Polishing the pixels...",
      "Finding a suitable loading screen pun...",
      "Distracting you with this witty phrase...",
      "Almost there... probably...",
      "Our hamsters are working as fast as they can...",
      "Giving Cloudy a pat on the head...",
      "Petting the cat...",
      "Rickrolling my boss...",
      "Never gonna give you up, never gonna let you down...",
      "Slapping the bass...",
      "Tasting the snozberries...",
      "I'm going the distance, I'm going for speed...",
      "Is this the real life? Is this just fantasy?...",
      "I've got a good feeling about this...",
      "Poking the bear...",
      "Doing research on the latest memes...",
      "Figuring out how to make this more witty...",
      "Hmmm... let me think...",
      "What do you call a fish with no eyes? A fsh...",
      "Why did the computer go to therapy? It had too many bytes...",
      "Why don't programmers like nature? It has too many bugs...",
      "Why do programmers prefer dark mode? Because light attracts bugs...",
      "Why did the developer go broke? Because they used up all their cache...",
      "What can you do with a broken pencil? Nothing, it's pointless...",
      "Applying percussive maintenance...",
      "Searching for the correct USB orientation...",
      "Ensuring the magic smoke stays inside the wires...",
      "Rewriting in Rust for no particular reason...",
      "Trying to exit Vim...",
      "Spinning up the hamster wheel...",
      "That's not a bug, it's an undocumented feature...",
      "Engage.",
      "I'll be back... with an answer.",
      "My other process is a TARDIS...",
      "Communing with the machine spirit...",
      "Letting the thoughts marinate...",
      "Just remembered where I put my keys...",
      "Pondering the orb...",
      "I've seen things you people wouldn't believe... like a user who reads loading messages.",
      "Initiating thoughtful gaze...",
      "What's a computer's favorite snack? Microchips.",
      "Why do Java developers wear glasses? Because they don't C#.",
      "Charging the laser... pew pew!",
      "Dividing by zero... just kidding!",
      "Looking for an adult superviso... I mean, processing.",
      "Making it go beep boop.",
      "Buffering... because even AIs need a moment.",
      "Entangling quantum particles for a faster response...",
      "Polishing the chrome... on the algorithms.",
      "Are you not entertained? (Working on it!)",
      "Summoning the code gremlins... to help, of course.",
      "Just waiting for the dial-up tone to finish...",
      "Recalibrating the humor-o-meter.",
      "My other loading screen is even funnier.",
      "Pretty sure there's a cat walking on the keyboard somewhere...",
      "Enhancing... Enhancing... Still loading.",
      "It's not a bug, it's a feature... of this loading screen.",
      "Have you tried turning it off and on again? (The loading screen, not me.)",
      "Constructing additional pylons...",
      "New line? That's Ctrl+J."
    ]
  },
  "context": {
    "using": "Using:",
    "file": "file",
    "files": "files",
    "openFile": "open file",
    "openFiles": "open files",
    "viewHint": "(ctrl+g to view)"
  },
  "tips": {
    "title": "Tips for getting started:",
    "tip1": "Ask questions, edit files, or run commands.",
    "tip2": "Be specific for the best results.",
    "tip3Before": "Create",
    "tip3After": "files to customize your interactions with Gemini.",
    "tip4": "for more information."
  },
  "auth": {
    "timeout": "Authentication timed out. Please try again.",
    "waiting": "Waiting for auth... (Press ESC or CTRL+C to cancel)"
  },
  "contextUsage": {
    "remaining": "{{percent}}% context left"
  },
  "modelStats": {
    "title": "Model Stats For Nerds",
    "noApiCalls": "No API calls have been made in this session.",
    "metric": "Metric",
    "sections": {
      "api": "API",
      "tokens": "Tokens"
    },
    "metrics": {
      "requests": "Requests",
      "errors": "Errors",
      "avgLatency": "Avg Latency",
      "total": "Total",
      "prompt": "Prompt",
      "cached": "Cached",
      "thoughts": "Thoughts",
      "tool": "Tool",
      "output": "Output"
    }
  },
  "prompts": {
    "pressEscToClear": "Press Esc again to clear.",
    "pressEscToExit": "Press Esc to exit.",
    "pressEnterToChoose": "Press Enter to choose an option and exit.",
    "pressCtrlCToExit": "Press Ctrl+C again to exit.",
    "pressCtrlDToExit": "Press Ctrl+D again to exit.",
    "ctrlOForDetails": "(ctrl+o for details)",
    "escToDisable": " (esc to disable)"
  },
  "status": {
    "loading": "Loading...",
    "codeBeingWritten": "... code is being written ...",
    "generatingMore": "... generating more ...",
    "loadingSuggestions": "Loading suggestions...",
    "noDiffContent": "No diff content.",
    "noChangesDetected": "No changes detected."
  },
  "stats": {
    "toolStatsTitle": "Tool Stats For Nerds",
    "noToolCalls": "No tool calls have been made in this session.",
    "toolName": "Tool Name",
    "calls": "Calls",
    "successRate": "Success Rate",
    "avgDuration": "Avg Duration",
    "userDecisionSummary": "User Decision Summary",
    "totalReviewedSuggestions": "Total Reviewed Suggestions:",
    "accepted": "» Accepted:",
    "rejected": "» Rejected:",
    "modified": "» Modified:",
    "overallAgreementRate": "Overall Agreement Rate:",
    "savingsHighlight": "Savings Highlight:",
    "cacheEfficiencyMessage": "{{cachedTokens}} ({{percentage}}%) of input tokens were served from the cache, reducing costs.",
    "tokenBredownTip": "» Tip: For a full token breakdown, run `/stats model`."
  },
  "commands": {
    "init": {
      "description": "Analyzes the project and creates a tailored GEMINI.md file.",
      "configNotAvailable": "Configuration not available.",
      "fileExists": "A GEMINI.md file already exists in this directory. No changes were made.",
      "creatingFile": "Empty GEMINI.md created. Now analyzing the project to populate it."
    },
    "vim": {
      "description": "toggle vim mode on/off",
      "entered": "Entered Vim mode. Run /vim again to exit.",
      "exited": "Exited Vim mode."
    },
    "terminalSetup": {
      "description": "Configure terminal keybindings for multiline input (VS Code, Cursor, Windsurf)",
      "restartRequired": "\\n\\nPlease restart your terminal for the changes to take effect.",
      "failed": "Failed to configure terminal: {{error}}"
    },
    "editor": {
      "description": "set external editor preference"
    },
    "privacy": {
      "description": "display the privacy notice"
    },
    "corgi": {
      "description": "Toggles corgi mode."
    },
    "theme": {
      "description": "change the theme"
    },
    "bug": {
      "description": "report a bug or issue"
    },
    "auth": {
      "description": "authenticate with Gemini"
    },
    "settings": {
      "description": "configure CLI settings"
    },
    "docs": {
      "description": "open documentation"
    },
    "help": {
      "description": "show available commands"
    },
    "about": {
      "description": "show version and system information"
    },
    "tools": {
      "description": "show available tools"
    },
    "stats": {
      "description": "show session statistics"
    },
    "clear": {
      "description": "clear the conversation history"
    },
    "quit": {
      "description": "exit the CLI"
    }
  },
  "autoAccept": {
    "acceptingEdits": "accepting edits",
    "shiftTabToggle": " (shift + tab to toggle)",
    "yoloMode": "YOLO mode", 
    "ctrlYToggle": " (ctrl + y to toggle)"
  },
  "shellMode": {
    "enabled": "shell mode enabled",
    "escToDisable": "(esc to disable)"
  },
  "loading": {
    "escToCancel": "(esc to cancel, "
  },
  "suggestions": {
    "loadingSuggestions": "Loading suggestions..."
  },
  "console": {
    "error": " error",
    "errors": " errors",
    "ctrlOForDetails": "(ctrl+o for details)"
  },
  "tools": {
    "modifyInProgress": "Modify in progress: ",
    "urlsToFetch": "URLs to fetch:",
    "mcpServer": "MCP Server: {{serverName}}",
    "tool": "Tool: {{toolName}}"
  },
  "debug": {
    "consoleTitle": "Debug Console",
    "closeHint": "(ctrl+o to close)",
    "renders": "Renders: {{count}}"
  },
  "buttons": {
    "yes": "Yes",
    "no": "No",
    "cancel": "Cancel",
    "allow": "Allow",
    "deny": "Deny",
    "continue": "Continue",
    "exit": "Exit"
  },
  "confirmations": {
    "yesAllowOnce": "Yes, allow once",
    "yesAllowAlways": "Yes, allow always",
    "noEsc": "No (esc)",
    "modifyWithExternalEditor": "Modify with external editor",
    "noSuggestChanges": "No, suggest changes (esc)",
    "yesAllowAlwaysEllipsis": "Yes, allow always ...",
    "noDontAskAgain": "No, don't ask again",
    "yesAllowToolFromServer": "Yes, always allow tool \"{{toolName}}\" from server \"{{serverName}}\"",
    "yesAllowAllToolsFromServer": "Yes, always allow all tools from server \"{{serverName}}\""
  },
  "chat": {
    "noCheckpoints": "No saved conversation checkpoints found.",
    "missingTagSave": "Missing tag. Usage: /chat save <tag>",
    "missingTagResume": "Missing tag. Usage: /chat resume <tag>",
    "missingTagDelete": "Missing tag. Usage: /chat delete <tag>",
    "noClientAvailable": "No chat client available to save conversation.",
    "checkpointSaved": "Conversation checkpoint saved with tag: {{tag}}.",
    "noConversationFound": "No conversation found to save.",
    "noCheckpointFound": "No saved checkpoint found with tag: {{tag}}.",
    "checkpointDeleted": "Conversation checkpoint '{{tag}}' has been deleted.",
    "deleteError": "Error: No checkpoint found with tag '{{tag}}'."
  },
  "copy": {
    "noHistory": "No output in history",
    "copySuccess": "Last output copied to the clipboard",
    "copyError": "Failed to copy to the clipboard.",
    "noTextToCopy": "Last AI output contains no text to copy."
  },
  "ide": {
    "connected": "🟢 Connected to {{ideName}}",
    "connecting": "🟡 Connecting...",
    "disconnected": "🔴 Disconnected",
    "disconnectedWithDetails": "🔴 Disconnected: {{details}}",
    "noInstaller": "No installer is available for {{ideName}}. Please install the '{{extensionName}}' extension manually from the marketplace.",
    "installing": "Installing IDE companion...",
    "installSuccess": "Successfully installed.",
    "installFailed": "Installation failed."
  },
  "mcp": {
    "configNotLoaded": "Config not loaded.",
    "toolRegistryError": "Could not retrieve tool registry.",
    "noServersConfigured": "No MCP servers configured. Please view MCP documentation in your browser: {{docsUrl}} or use the cli /docs command",
    "noOAuthServers": "No MCP servers configured with OAuth authentication.",
    "oauthServersList": "MCP servers with OAuth authentication:\n{{serverList}}\n\nUse /mcp auth <server-name> to authenticate.",
    "serverNotFound": "MCP server '{{serverName}}' not found.",
    "startingAuth": "Starting OAuth authentication for MCP server '{{serverName}}'...",
    "authSuccess": "✅ Successfully authenticated with MCP server '{{serverName}}'!",
    "rediscoveringTools": "Re-discovering tools from '{{serverName}}'...",
    "authAndToolsSuccess": "Successfully authenticated and refreshed tools for '{{serverName}}'.",
    "authError": "Authentication failed for MCP server '{{serverName}}'.",
    "restartingServers": "Restarting MCP servers..."
  }
}
