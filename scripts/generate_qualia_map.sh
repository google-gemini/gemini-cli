#!/bin/bash

# Script to generate a directory map of packages
# This script creates a visual Markdown map in packages_map.md

echo "Generating directory structure map..."

OUTPUT_FILE="docs/packages_map.md"

# Create header
cat > "$OUTPUT_FILE" << EOF
# 📂 Packages Directory Structure
# Generated on: $(date)
# Target: packages/

---

## 📊 Directory Tree

EOF

# Function to generate Markdown tree
generate_markdown_tree() {
    local dir="$1"
    local prefix="$2"
    local depth="$3"

    # Limit depth to prevent too deep recursion
    if [ "$depth" -gt 10 ]; then
        return
    fi

    # Get directories and files, sort them
    local items=()
    while IFS= read -r -d '' item; do
        items+=("$item")
    done < <(find "$dir" -mindepth 1 -maxdepth 1 -print0 | sort -z)

    local count=0
    local total=${#items[@]}

    for item in "${items[@]}"; do
        count=$((count + 1))
        local basename_item=$(basename "$item")

        # Skip certain files/directories
        if [[ "$basename_item" == "__pycache__" ]] || [[ "$basename_item" == "*.pyc" ]] || [[ "$basename_item" == "dist" ]] || [[ "$basename_item" == "node_modules" ]] || [[ "$basename_item" == *.test.ts ]] || [[ "$basename_item" == "cov" ]] || [[ "$basename_item" == "coverage" ]] || [[ "$basename_item" == "lcov-report" ]] || [[ "$basename_item" == "__snapshots__" ]]; then
            continue
        fi

        # Determine if it's the last item for tree drawing
        local is_last=""
        if [ "$count" -eq "$total" ]; then
            is_last="└── "
        else
            is_last="├── "
        fi

        # Check if directory or file
        if [ -d "$item" ]; then
            # Directory
            echo "${prefix}${is_last}📁 **$basename_item/**" >> "$OUTPUT_FILE"

            # Recurse into directory
            if [ "$count" -eq "$total" ]; then
                generate_markdown_tree "$item" "${prefix}    " $((depth + 1))
            else
                generate_markdown_tree "$item" "${prefix}│   " $((depth + 1))
            fi
        else
            # File
            echo "${prefix}${is_last}📄 $basename_item" >> "$OUTPUT_FILE"
        fi
    done
}

# Generate the tree starting from packages
echo "📁 **packages/**" >> "$OUTPUT_FILE"
generate_markdown_tree "packages" "" 0

# Add footer
cat >> "$OUTPUT_FILE" << 'EOF'

---

## 📈 Statistics

EOF

# Generate statistics
echo "\`\`\`bash" >> "$OUTPUT_FILE"
echo "# Directory count:" >> "$OUTPUT_FILE"
find packages -type d | wc -l >> "$OUTPUT_FILE"
echo "" >> "$OUTPUT_FILE"
echo "# File count:" >> "$OUTPUT_FILE"
find packages -type f | wc -l >> "$OUTPUT_FILE"
echo "" >> "$OUTPUT_FILE"
echo "# Total items:" >> "$OUTPUT_FILE"
find packages | wc -l >> "$OUTPUT_FILE"
echo "\`\`\`" >> "$OUTPUT_FILE"

echo "" >> "$OUTPUT_FILE"
echo "*Generated by generate_qualia_map.sh*" >> "$OUTPUT_FILE"

echo "✅ Map generated successfully in docs/packages_map.md"